// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @db.VarChar(255)
  name String
  username String @unique @db.VarChar(120)
  email String @unique @db.VarChar(120)
  password String @db.VarChar(255)
  role Role
  tokenVersion Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  processes Process[]
  orders Order[]
  authentications Authentication[]

  @@map("users")
}

model Authentication {
  token String @id @db.VarChar(500)
  userId String
  expiresAt DateTime
  revoked Boolean @default(false)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("authentications")
}

model Order {
  id String @id @db.VarChar(255)
  userId String
  size Int
  layer Int?
	isUseTopper Boolean
  pickupTime BigInt
  price Float
  downPayment Float
  remainingPayment Float
  telp String @db.VarChar(15)
  notes String?
  text String @db.VarChar(255)
  textColor String @db.VarChar(120)
  pictures Picture[]
  progresses OrderProgress[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model Picture {
  id String @id @db.VarChar(255)
  orderId String
  url String
  Order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("pictures")
}

model Process {
  id String @id @db.VarChar(255)
  userId String
  name String
  step Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders OrderProgress[]

  @@map("processes")
}

model OrderProgress {
  orderId String
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  processId String
  process Process @relation(fields: [processId], references: [id], onDelete: Cascade)
  isFinish Boolean @default(false)

  @@id([orderId, processId])
  @@map("order_progresses")
}

enum Role {
  ADMIN
  SUPER
  USER
}
